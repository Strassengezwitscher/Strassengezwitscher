"""
Django settings for strassengezwitscher project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

import sys

import logging

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0($mqx7@9cm@1)wa(k=*gv&6_3--7do0w++7t4jatsd8^+u*d6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

INTERNAL_IPS = (
    '127.0.0.1',
)


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'mapobjects.apps.MapobjectsConfig',
    'facebook.apps.FacebookConfig',
    'events.apps.EventsConfig',
    'contact.apps.ContactConfig',
    'rest_framework',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'strassengezwitscher.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'strassengezwitscher.wsgi.application'

# REST Framework
# http://www.django-rest-framework.org/api-guide/settings/
REST_FRAMEWORK = {
    # differs from default settings as it does not include
    # 'rest_framework.authentication.BasicAuthentication'
    # which would interfere with the deployed develop branch's BasicAuth
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
    )
}

######################################################################################################
#                                           Email settings
######################################################################################################
EMAIL_USE_TLS = True  # port 587
EMAIL_TIMEOUT = 10  # timeout in seconds for blocking operations like the connection attempt

#
# Override the following email-related settings in localsettings.py
#
# list of all the people who get code error notifications
ADMINS = [('Name1', 'email_address1'), ('Name2', 'email_address2')]
#
# Default email address to use for various automated correspondence; not for error reporting
DEFAULT_FROM_EMAIL = 'user@provider'
#
# email address that error messages come from
SERVER_EMAIL = 'user@provider'
#
# Email address to use as sender for delivering contact forms
EMAIL_FROM_CONTACT = 'Some Name <user@provider>'
#
# Email addresses to use as recipients for confidential contact forms
EMAIL_TO_CONTACT_CONFIDENTIAL = ['user@provider']
#
# Email addresses to use as recipients for non-confidential contact forms
EMAIL_TO_CONTACT_NON_CONFIDENTIAL = ['user@provider']
#
# Your email provider's host and your credentials
EMAIL_HOST = 'provider'
EMAIL_HOST_USER = 'user@provider'
EMAIL_HOST_PASSWORD = 'password'

######################################################################################################


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

FIXTURE_DIRS = [os.path.join(BASE_DIR, 'strassengezwitscher', 'initial')]

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# According to http://12factor.net/logs we always log to stdout/stderr and do not manage log files.
# Production log files are managed by the production execution environment, never Django itself.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
        },
    },
    'loggers': {
        'strassengezwitscher': {
            'handlers': ['console', 'mail_admins'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}


# Create a localsettings.py if you want to locally override settings
# and don't want the changes to appear in 'git status'.
try:
    from strassengezwitscher.localsettings import *  # noqa
except ImportError:
    pass

# set additonal directories for static files
if DEBUG:
    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, "static/build"),
    )
else:
    STATICFILES_DIRS = (
        os.path.join(BASE_DIR, "static/dist"),
    )

# set renderer for rest framework
if not DEBUG:
    REST_FRAMEWORK['DEFAULT_RENDERER_CLASSES'] = (
        'rest_framework.renderers.JSONRenderer',
    )


TESTING = 'test' in sys.argv

# speed up tests
if TESTING:
    DATABASES['default'] = {'ENGINE': 'django.db.backends.sqlite3'}  # use sqlite
    logging.disable(logging.CRITICAL)
